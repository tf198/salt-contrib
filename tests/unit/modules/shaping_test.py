from unittest import TestCase
from salt.modules import shaping
import yaml

class ShapingModuleTest(TestCase):
    '''
    Tests the build logic for the shaping module
    '''
    
    def assertBuildResult(self, state, result_text):
        
        data = yaml.load(state)
        
        iface = data.keys()[0]
        qdisc = {}
        for x in data[iface]['shaping.qdisc']:
            qdisc.update(x)
        
        result = shaping.build_script(iface, qdisc, testing=True)
        
        self.assertListEqual(result_text.strip().split('\n'), [ line.strip() for line in result ])
        
    def test_prio_example(self):
        self.assertBuildResult('''
eth0: # basic priority queue - see http://www.lartc.org/howto/lartc.qdisc.classful.html#AEN902
  shaping.qdisc:
    - type: prio
    - classes:
      - qdisc: { type: sfq } # prio 1
      - qdisc: { type: tbf, options: rate 20kbit buffer 1600 limit 3000 } # prio 2
      - qdisc: { type: sfq } # prio 3     
''','''
#!/bin/bash
set -e

## AUTOGENERATED TC FOR eth0 - DO NOT EDIT ##
tc qdisc del dev eth0 root || true
tc qdisc add dev eth0 root handle 1: prio
tc qdisc add dev eth0 parent 1:1 handle 2: sfq
tc qdisc add dev eth0 parent 1:2 handle 3: tbf rate 20kbit buffer 1600 limit 3000
tc qdisc add dev eth0 parent 1:3 handle 4: sfq
''')
        
    def test_htb_example(self):
        self.assertBuildResult('''
  eth1: # More complicated Hierarchical Token Bucket example
    shaping.qdisc:
      - type: htb
      - default: 13
      - classes:
        - comment: Interface limit
          options: rate 1024kbit # slightly below the connection speed
          classes:
            - comment: Default traffic
              id: 13                                    # explicit class ID so we can reference as default from the qdisc
              options: rate 768kbit ceil 1024kbit prio 2
              qdisc: { type: sfq, options: perturb 10 } # recommended to always add a SFQ to the bottom of everything
            - comment: Interactive traffic
              filters: [ match ip tos 0x10 0xff ]       # TOS interactive
              options: rate 128kbit prio 1
              qdisc: { type: sfq, options: perturb 10 }
            - comment: Bulk traffic
              filters: [ match ip tos 0x08 0xff ]       # TOS bulk
              options: rate 128kbit ceil 1024kbit prio 3
              qdisc: { type: sfq, options: perturb 10 }
''','''
#!/bin/bash
set -e

## AUTOGENERATED TC FOR eth1 - DO NOT EDIT ##
tc qdisc del dev eth1 root || true
tc qdisc add dev eth1 root handle 1: htb

# Interface limit
tc class add dev eth1 parent 1: classid 1:100 htb rate 1024kbit

# Default traffic
tc class add dev eth1 parent 1:100 classid 1:13 htb rate 768kbit ceil 1024kbit prio 2
tc qdisc add dev eth1 parent 1:13 handle 2: sfq perturb 10

# Interactive traffic
tc filter add dev eth1 parent 1: u32 match ip tos 0x10 0xff flowid 1:102
tc class add dev eth1 parent 1:100 classid 1:102 htb rate 128kbit prio 1
tc qdisc add dev eth1 parent 1:102 handle 3: sfq perturb 10

# Bulk traffic
tc filter add dev eth1 parent 1: u32 match ip tos 0x08 0xff flowid 1:103
tc class add dev eth1 parent 1:100 classid 1:103 htb rate 128kbit ceil 1024kbit prio 3
tc qdisc add dev eth1 parent 1:103 handle 4: sfq perturb 10
''')